//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiServices.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BDComercialEntities : DbContext
    {
        public BDComercialEntities()
            : base("name=BDComercialEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<VW_HomologacionCliente> VW_HomologacionCliente { get; set; }
        public virtual DbSet<WCO_SedeCompartida> WCO_SedeCompartida { get; set; }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicio_Result> WCO_ListarAdmisionServicio(Nullable<System.DateTime> pFechaFin, Nullable<System.DateTime> pFechaIni, string pNroPeticion, Nullable<int> pTipoAdmision, string pHistoriaClinica, Nullable<int> pEstado, Nullable<int> persona, string usuarioCreacion, Nullable<int> idSede, string ordenAtencion, string idClasificadorMovimiento, Nullable<int> flatCoaSeguro, Nullable<int> flatMovilidad)
        {
            var pFechaFinParameter = pFechaFin.HasValue ?
                new ObjectParameter("pFechaFin", pFechaFin) :
                new ObjectParameter("pFechaFin", typeof(System.DateTime));
    
            var pFechaIniParameter = pFechaIni.HasValue ?
                new ObjectParameter("pFechaIni", pFechaIni) :
                new ObjectParameter("pFechaIni", typeof(System.DateTime));
    
            var pNroPeticionParameter = pNroPeticion != null ?
                new ObjectParameter("pNroPeticion", pNroPeticion) :
                new ObjectParameter("pNroPeticion", typeof(string));
    
            var pTipoAdmisionParameter = pTipoAdmision.HasValue ?
                new ObjectParameter("pTipoAdmision", pTipoAdmision) :
                new ObjectParameter("pTipoAdmision", typeof(int));
    
            var pHistoriaClinicaParameter = pHistoriaClinica != null ?
                new ObjectParameter("pHistoriaClinica", pHistoriaClinica) :
                new ObjectParameter("pHistoriaClinica", typeof(string));
    
            var pEstadoParameter = pEstado.HasValue ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var ordenAtencionParameter = ordenAtencion != null ?
                new ObjectParameter("OrdenAtencion", ordenAtencion) :
                new ObjectParameter("OrdenAtencion", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var flatCoaSeguroParameter = flatCoaSeguro.HasValue ?
                new ObjectParameter("FlatCoaSeguro", flatCoaSeguro) :
                new ObjectParameter("FlatCoaSeguro", typeof(int));
    
            var flatMovilidadParameter = flatMovilidad.HasValue ?
                new ObjectParameter("FlatMovilidad", flatMovilidad) :
                new ObjectParameter("FlatMovilidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicio_Result>("WCO_ListarAdmisionServicio", pFechaFinParameter, pFechaIniParameter, pNroPeticionParameter, pTipoAdmisionParameter, pHistoriaClinicaParameter, pEstadoParameter, personaParameter, usuarioCreacionParameter, idSedeParameter, ordenAtencionParameter, idClasificadorMovimientoParameter, flatCoaSeguroParameter, flatMovilidadParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicioConstancia_Result> WCO_ListarAdmisionServicioConstancia(Nullable<int> pIdAdmision, string nroPeticion)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicioConstancia_Result>("WCO_ListarAdmisionServicioConstancia", pIdAdmisionParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicioConstanciaDetalle_Result> WCO_ListarAdmisionServicioConstanciaDetalle(Nullable<int> pIdAdmision, string nroPeticion)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicioConstanciaDetalle_Result>("WCO_ListarAdmisionServicioConstanciaDetalle", pIdAdmisionParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicioDetalle_Result> WCO_ListarAdmisionServicioDetalle(Nullable<int> pIdAdmision, string nroPeticion)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicioDetalle_Result>("WCO_ListarAdmisionServicioDetalle", pIdAdmisionParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicioImpresion_Result> WCO_ListarAdmisionServicioImpresion(Nullable<int> pIdAdmision, string nroPeticion)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicioImpresion_Result>("WCO_ListarAdmisionServicioImpresion", pIdAdmisionParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionServicioReporte_Result> WCO_ListarAdmisionServicioReporte(Nullable<int> pIdAdmision, string nroPeticion)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionServicioReporte_Result>("WCO_ListarAdmisionServicioReporte", pIdAdmisionParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_LISTARASIGNARPERFILPAG_Result> WCO_LISTARASIGNARPERFILPAG(string perfil, string usuario, string nombrecompleto)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_LISTARASIGNARPERFILPAG_Result>("WCO_LISTARASIGNARPERFILPAG", perfilParameter, usuarioParameter, nombrecompletoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarBanco_Result> WCO_ListarBanco(string banco, string estado, string descripcionCorta)
        {
            var bancoParameter = banco != null ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarBanco_Result>("WCO_ListarBanco", bancoParameter, estadoParameter, descripcionCortaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarBase_Result> WCO_ListarBase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarBase_Result>("WCO_ListarBase");
        }
    
        public virtual ObjectResult<WCO_ListarClasiComponente_Result> WCO_ListarClasiComponente(Nullable<int> idClasificacion, Nullable<int> idClasificacionPadre, string descripcion, Nullable<int> tipoOperacionID, Nullable<int> modeloServicioId, Nullable<int> estado)
        {
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var idClasificacionPadreParameter = idClasificacionPadre.HasValue ?
                new ObjectParameter("IdClasificacionPadre", idClasificacionPadre) :
                new ObjectParameter("IdClasificacionPadre", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarClasiComponente_Result>("WCO_ListarClasiComponente", idClasificacionParameter, idClasificacionPadreParameter, descripcionParameter, tipoOperacionIDParameter, modeloServicioIdParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarClasificadorMovimiento_Result> WCO_ListarClasificadorMovimiento(string idClasificadorMovimiento, string compania, string nombre, Nullable<int> estado)
        {
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarClasificadorMovimiento_Result>("WCO_ListarClasificadorMovimiento", idClasificadorMovimientoParameter, companiaParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComboPerfil_Result> WCO_ListarComboPerfil()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComboPerfil_Result>("WCO_ListarComboPerfil");
        }
    
        public virtual ObjectResult<WCO_ListarCompaniaMast_Result> WCO_ListarCompaniaMast(string companiaCodigo, string descripcionCorta, string documentoFiscal, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var descripcionCortaParameter = descripcionCorta != null ?
                new ObjectParameter("DescripcionCorta", descripcionCorta) :
                new ObjectParameter("DescripcionCorta", typeof(string));
    
            var documentoFiscalParameter = documentoFiscal != null ?
                new ObjectParameter("DocumentoFiscal", documentoFiscal) :
                new ObjectParameter("DocumentoFiscal", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCompaniaMast_Result>("WCO_ListarCompaniaMast", companiaCodigoParameter, descripcionCortaParameter, documentoFiscalParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComponenteMuestra_Result> WCO_ListarComponenteMuestra(string codigoComponente, Nullable<int> idMuestra, string nombre, string abreviatura, Nullable<int> cantidad)
        {
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var idMuestraParameter = idMuestra.HasValue ?
                new ObjectParameter("IdMuestra", idMuestra) :
                new ObjectParameter("IdMuestra", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComponenteMuestra_Result>("WCO_ListarComponenteMuestra", codigoComponenteParameter, idMuestraParameter, nombreParameter, abreviaturaParameter, cantidadParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComponentePerfil_Result> WCO_ListarComponentePerfil(Nullable<int> uneuNegocioId, string codigoComponente, string codigoHomologado, Nullable<int> estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var codigoHomologadoParameter = codigoHomologado != null ?
                new ObjectParameter("CodigoHomologado", codigoHomologado) :
                new ObjectParameter("CodigoHomologado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComponentePerfil_Result>("WCO_ListarComponentePerfil", uneuNegocioIdParameter, codigoComponenteParameter, codigoHomologadoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_TraerXAdmisionServicio_Result> WCO_TraerXAdmisionServicio(Nullable<int> pIdAdmision)
        {
            var pIdAdmisionParameter = pIdAdmision.HasValue ?
                new ObjectParameter("pIdAdmision", pIdAdmision) :
                new ObjectParameter("pIdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerXAdmisionServicio_Result>("WCO_TraerXAdmisionServicio", pIdAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_TraerXCodigoPersonaId_Result> WCO_TraerXCodigoPersonaId(Nullable<int> pERSONA)
        {
            var pERSONAParameter = pERSONA.HasValue ?
                new ObjectParameter("PERSONA", pERSONA) :
                new ObjectParameter("PERSONA", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerXCodigoPersonaId_Result>("WCO_TraerXCodigoPersonaId", pERSONAParameter);
        }
    
        public virtual ObjectResult<WCO_TraerXIdSede_Result> WCO_TraerXIdSede(Nullable<int> idSede, Nullable<int> persona)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerXIdSede_Result>("WCO_TraerXIdSede", idSedeParameter, personaParameter);
        }
    
        public virtual ObjectResult<WCO_TraerTipoOperacionxCodigo_Result> WCO_TraerTipoOperacionxCodigo(Nullable<int> uneuNegocioId, Nullable<int> tipoAdmisionId, Nullable<int> persona, Nullable<int> tipEstado, Nullable<int> tipoPacienteId, Nullable<int> idSede)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerTipoOperacionxCodigo_Result>("WCO_TraerTipoOperacionxCodigo", uneuNegocioIdParameter, tipoAdmisionIdParameter, personaParameter, tipEstadoParameter, tipoPacienteIdParameter, idSedeParameter);
        }
    
        public virtual ObjectResult<WCO_TraerTipoOperacionxId_Result> WCO_TraerTipoOperacionxId(Nullable<int> tipoOperacionId)
        {
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerTipoOperacionxId_Result>("WCO_TraerTipoOperacionxId", tipoOperacionIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambioMo_Result> WCO_ListarTipoCambioMo(Nullable<System.DateTime> pFechacambio, Nullable<System.DateTime> pFechainicial, Nullable<System.DateTime> pFechaFinal, string pEstado)
        {
            var pFechacambioParameter = pFechacambio.HasValue ?
                new ObjectParameter("PFechacambio", pFechacambio) :
                new ObjectParameter("PFechacambio", typeof(System.DateTime));
    
            var pFechainicialParameter = pFechainicial.HasValue ?
                new ObjectParameter("PFechainicial", pFechainicial) :
                new ObjectParameter("PFechainicial", typeof(System.DateTime));
    
            var pFechaFinalParameter = pFechaFinal.HasValue ?
                new ObjectParameter("PFechaFinal", pFechaFinal) :
                new ObjectParameter("PFechaFinal", typeof(System.DateTime));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("PEstado", pEstado) :
                new ObjectParameter("PEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambioMo_Result>("WCO_ListarTipoCambioMo", pFechacambioParameter, pFechainicialParameter, pFechaFinalParameter, pEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipodeAdmision_Result> WCO_ListarTipodeAdmision(string admCodigo, string admDescripcion, Nullable<int> admEstado)
        {
            var admCodigoParameter = admCodigo != null ?
                new ObjectParameter("AdmCodigo", admCodigo) :
                new ObjectParameter("AdmCodigo", typeof(string));
    
            var admDescripcionParameter = admDescripcion != null ?
                new ObjectParameter("AdmDescripcion", admDescripcion) :
                new ObjectParameter("AdmDescripcion", typeof(string));
    
            var admEstadoParameter = admEstado.HasValue ?
                new ObjectParameter("AdmEstado", admEstado) :
                new ObjectParameter("AdmEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipodeAdmision_Result>("WCO_ListarTipodeAdmision", admCodigoParameter, admDescripcionParameter, admEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoOperacion_Result> WCO_ListarTipoOperacion(Nullable<int> uneuNegocioId, Nullable<int> tipoOperacionId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado, Nullable<int> tipoPacienteId, Nullable<int> idSede, Nullable<int> idSedeCliente, string sedCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idSedeClienteParameter = idSedeCliente.HasValue ?
                new ObjectParameter("IdSedeCliente", idSedeCliente) :
                new ObjectParameter("IdSedeCliente", typeof(int));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoOperacion_Result>("WCO_ListarTipoOperacion", uneuNegocioIdParameter, tipoOperacionIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter, tipoPacienteIdParameter, idSedeParameter, idSedeClienteParameter, sedCodigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTMAestroDetalles_Result> WCO_ListarTMAestroDetalles(Nullable<int> idtablamaestro, Nullable<int> idcodigo, string nombre, Nullable<int> estado)
        {
            var idtablamaestroParameter = idtablamaestro.HasValue ?
                new ObjectParameter("idtablamaestro", idtablamaestro) :
                new ObjectParameter("idtablamaestro", typeof(int));
    
            var idcodigoParameter = idcodigo.HasValue ?
                new ObjectParameter("idcodigo", idcodigo) :
                new ObjectParameter("idcodigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTMAestroDetalles_Result>("WCO_ListarTMAestroDetalles", idtablamaestroParameter, idcodigoParameter, nombreParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUbigeo_Result> WCO_ListarUbigeo(string pUbigeo, Nullable<int> nUM)
        {
            var pUbigeoParameter = pUbigeo != null ?
                new ObjectParameter("pUbigeo", pUbigeo) :
                new ObjectParameter("pUbigeo", typeof(string));
    
            var nUMParameter = nUM.HasValue ?
                new ObjectParameter("NUM", nUM) :
                new ObjectParameter("NUM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUbigeo_Result>("WCO_ListarUbigeo", pUbigeoParameter, nUMParameter);
        }
    
        public virtual ObjectResult<WCO_PerfilPaginas_Result> WCO_PerfilPaginas(string uSUARIO, string pASSWORD, string sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sEDEParameter = sEDE != null ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(string));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_PerfilPaginas_Result>("WCO_PerfilPaginas", uSUARIOParameter, pASSWORDParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter);
        }
    
        public virtual ObjectResult<WCO_TraerIDPersonaxCorreo_Result> WCO_TraerIDPersonaxCorreo(string pERSONAcorreo)
        {
            var pERSONAcorreoParameter = pERSONAcorreo != null ?
                new ObjectParameter("PERSONAcorreo", pERSONAcorreo) :
                new ObjectParameter("PERSONAcorreo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TraerIDPersonaxCorreo_Result>("WCO_TraerIDPersonaxCorreo", pERSONAcorreoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUsuario_Result> WCO_ListarUsuario(string perfil, string usuario, string nombrecompleto, string estado)
        {
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var nombrecompletoParameter = nombrecompleto != null ?
                new ObjectParameter("nombrecompleto", nombrecompleto) :
                new ObjectParameter("nombrecompleto", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUsuario_Result>("WCO_ListarUsuario", perfilParameter, usuarioParameter, nombrecompletoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_PerfilPaginasOpciones_Result> WCO_PerfilPaginasOpciones(string uSUARIO, string pASSWORD, string mODULO, string pAGINA, string sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var mODULOParameter = mODULO != null ?
                new ObjectParameter("MODULO", mODULO) :
                new ObjectParameter("MODULO", typeof(string));
    
            var pAGINAParameter = pAGINA != null ?
                new ObjectParameter("PAGINA", pAGINA) :
                new ObjectParameter("PAGINA", typeof(string));
    
            var sEDEParameter = sEDE != null ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(string));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_PerfilPaginasOpciones_Result>("WCO_PerfilPaginasOpciones", uSUARIOParameter, pASSWORDParameter, mODULOParameter, pAGINAParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUsuarioSede_Result> WCO_ListarUsuarioSede(string usuario, Nullable<int> idSede)
        {
            var usuarioParameter = usuario != null ?
                new ObjectParameter("usuario", usuario) :
                new ObjectParameter("usuario", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUsuarioSede_Result>("WCO_ListarUsuarioSede", usuarioParameter, idSedeParameter);
        }
    
        public virtual ObjectResult<WCO_ListarUsuarioWeb_Result> WCO_ListarUsuarioWeb(Nullable<int> idPersona, string nombre, string documento, string clasificadorMovimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarUsuarioWeb_Result>("WCO_ListarUsuarioWeb", idPersonaParameter, nombreParameter, documentoParameter, clasificadorMovimientoParameter);
        }
    
        public virtual ObjectResult<Sp_PDP_validacion_Result> Sp_PDP_validacion(string documento)
        {
            var documentoParameter = documento != null ?
                new ObjectParameter("documento", documento) :
                new ObjectParameter("documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_PDP_validacion_Result>("Sp_PDP_validacion", documentoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WCO_AnulacionPreAdmision(string empresaProveedor, string acceso, Nullable<int> idOrdenAtencion, Nullable<int> linea, string mensaje, Nullable<int> estado, Nullable<int> idPreAdmision)
        {
            var empresaProveedorParameter = empresaProveedor != null ?
                new ObjectParameter("EmpresaProveedor", empresaProveedor) :
                new ObjectParameter("EmpresaProveedor", typeof(string));
    
            var accesoParameter = acceso != null ?
                new ObjectParameter("Acceso", acceso) :
                new ObjectParameter("Acceso", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var mensajeParameter = mensaje != null ?
                new ObjectParameter("Mensaje", mensaje) :
                new ObjectParameter("Mensaje", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idPreAdmisionParameter = idPreAdmision.HasValue ?
                new ObjectParameter("IdPreAdmision", idPreAdmision) :
                new ObjectParameter("IdPreAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WCO_AnulacionPreAdmision", empresaProveedorParameter, accesoParameter, idOrdenAtencionParameter, lineaParameter, mensajeParameter, estadoParameter, idPreAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_BUSCARPERSONAUSUARIO_Result> WCO_BUSCARPERSONAUSUARIO(string nOMBRECOMPLETO, string tipoDocumento, string documento, string tipopersona, Nullable<int> soloBeneficiarios, Nullable<int> idEmpresaEmpleadora)
        {
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipopersonaParameter = tipopersona != null ?
                new ObjectParameter("tipopersona", tipopersona) :
                new ObjectParameter("tipopersona", typeof(string));
    
            var soloBeneficiariosParameter = soloBeneficiarios.HasValue ?
                new ObjectParameter("SoloBeneficiarios", soloBeneficiarios) :
                new ObjectParameter("SoloBeneficiarios", typeof(int));
    
            var idEmpresaEmpleadoraParameter = idEmpresaEmpleadora.HasValue ?
                new ObjectParameter("idEmpresaEmpleadora", idEmpresaEmpleadora) :
                new ObjectParameter("idEmpresaEmpleadora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_BUSCARPERSONAUSUARIO_Result>("WCO_BUSCARPERSONAUSUARIO", nOMBRECOMPLETOParameter, tipoDocumentoParameter, documentoParameter, tipopersonaParameter, soloBeneficiariosParameter, idEmpresaEmpleadoraParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> WCO_InsertarPreAdmision(Nullable<int> idPreAdmision, Nullable<System.DateTime> fechaProgramacion, Nullable<int> tipoOperacionId, string cliente, string acceso, string servicio, string sucursal, string codigoHC, string codigoOA, string tipoAtencion, string tipoOrden, string numerocama, string pacienteNombres, string pacienteAPPaterno, string pacienteAPMaterno, Nullable<System.DateTime> fechaNacimiento, string sexo, string tipoDocumento, string documento, string especialidad_Nombre, Nullable<int> idOrdenAtencion, Nullable<int> linea, string componente, string componenteNombre, Nullable<int> cantidadSolicitada, string medicoNombres, string medicoAPPaterno, string medicoAPMaterno, string cMP, string aseguradora_RUC, string aseguradora_Nombre, string empleadora_RUC, string empleadora_Nombre, Nullable<System.DateTime> fechaLimiteAtencion, string pacienteTelefono, string pacienteemail, string observacion, string nroLote, Nullable<int> estado, string ipCreacion, string usuarioCreacion)
        {
            var idPreAdmisionParameter = idPreAdmision.HasValue ?
                new ObjectParameter("IdPreAdmision", idPreAdmision) :
                new ObjectParameter("IdPreAdmision", typeof(int));
    
            var fechaProgramacionParameter = fechaProgramacion.HasValue ?
                new ObjectParameter("FechaProgramacion", fechaProgramacion) :
                new ObjectParameter("FechaProgramacion", typeof(System.DateTime));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var accesoParameter = acceso != null ?
                new ObjectParameter("Acceso", acceso) :
                new ObjectParameter("Acceso", typeof(string));
    
            var servicioParameter = servicio != null ?
                new ObjectParameter("Servicio", servicio) :
                new ObjectParameter("Servicio", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var codigoHCParameter = codigoHC != null ?
                new ObjectParameter("CodigoHC", codigoHC) :
                new ObjectParameter("CodigoHC", typeof(string));
    
            var codigoOAParameter = codigoOA != null ?
                new ObjectParameter("CodigoOA", codigoOA) :
                new ObjectParameter("CodigoOA", typeof(string));
    
            var tipoAtencionParameter = tipoAtencion != null ?
                new ObjectParameter("TipoAtencion", tipoAtencion) :
                new ObjectParameter("TipoAtencion", typeof(string));
    
            var tipoOrdenParameter = tipoOrden != null ?
                new ObjectParameter("TipoOrden", tipoOrden) :
                new ObjectParameter("TipoOrden", typeof(string));
    
            var numerocamaParameter = numerocama != null ?
                new ObjectParameter("Numerocama", numerocama) :
                new ObjectParameter("Numerocama", typeof(string));
    
            var pacienteNombresParameter = pacienteNombres != null ?
                new ObjectParameter("PacienteNombres", pacienteNombres) :
                new ObjectParameter("PacienteNombres", typeof(string));
    
            var pacienteAPPaternoParameter = pacienteAPPaterno != null ?
                new ObjectParameter("PacienteAPPaterno", pacienteAPPaterno) :
                new ObjectParameter("PacienteAPPaterno", typeof(string));
    
            var pacienteAPMaternoParameter = pacienteAPMaterno != null ?
                new ObjectParameter("PacienteAPMaterno", pacienteAPMaterno) :
                new ObjectParameter("PacienteAPMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var sexoParameter = sexo != null ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var especialidad_NombreParameter = especialidad_Nombre != null ?
                new ObjectParameter("Especialidad_Nombre", especialidad_Nombre) :
                new ObjectParameter("Especialidad_Nombre", typeof(string));
    
            var idOrdenAtencionParameter = idOrdenAtencion.HasValue ?
                new ObjectParameter("IdOrdenAtencion", idOrdenAtencion) :
                new ObjectParameter("IdOrdenAtencion", typeof(int));
    
            var lineaParameter = linea.HasValue ?
                new ObjectParameter("Linea", linea) :
                new ObjectParameter("Linea", typeof(int));
    
            var componenteParameter = componente != null ?
                new ObjectParameter("Componente", componente) :
                new ObjectParameter("Componente", typeof(string));
    
            var componenteNombreParameter = componenteNombre != null ?
                new ObjectParameter("ComponenteNombre", componenteNombre) :
                new ObjectParameter("ComponenteNombre", typeof(string));
    
            var cantidadSolicitadaParameter = cantidadSolicitada.HasValue ?
                new ObjectParameter("CantidadSolicitada", cantidadSolicitada) :
                new ObjectParameter("CantidadSolicitada", typeof(int));
    
            var medicoNombresParameter = medicoNombres != null ?
                new ObjectParameter("MedicoNombres", medicoNombres) :
                new ObjectParameter("MedicoNombres", typeof(string));
    
            var medicoAPPaternoParameter = medicoAPPaterno != null ?
                new ObjectParameter("MedicoAPPaterno", medicoAPPaterno) :
                new ObjectParameter("MedicoAPPaterno", typeof(string));
    
            var medicoAPMaternoParameter = medicoAPMaterno != null ?
                new ObjectParameter("MedicoAPMaterno", medicoAPMaterno) :
                new ObjectParameter("MedicoAPMaterno", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var aseguradora_RUCParameter = aseguradora_RUC != null ?
                new ObjectParameter("Aseguradora_RUC", aseguradora_RUC) :
                new ObjectParameter("Aseguradora_RUC", typeof(string));
    
            var aseguradora_NombreParameter = aseguradora_Nombre != null ?
                new ObjectParameter("Aseguradora_Nombre", aseguradora_Nombre) :
                new ObjectParameter("Aseguradora_Nombre", typeof(string));
    
            var empleadora_RUCParameter = empleadora_RUC != null ?
                new ObjectParameter("Empleadora_RUC", empleadora_RUC) :
                new ObjectParameter("Empleadora_RUC", typeof(string));
    
            var empleadora_NombreParameter = empleadora_Nombre != null ?
                new ObjectParameter("Empleadora_Nombre", empleadora_Nombre) :
                new ObjectParameter("Empleadora_Nombre", typeof(string));
    
            var fechaLimiteAtencionParameter = fechaLimiteAtencion.HasValue ?
                new ObjectParameter("FechaLimiteAtencion", fechaLimiteAtencion) :
                new ObjectParameter("FechaLimiteAtencion", typeof(System.DateTime));
    
            var pacienteTelefonoParameter = pacienteTelefono != null ?
                new ObjectParameter("PacienteTelefono", pacienteTelefono) :
                new ObjectParameter("PacienteTelefono", typeof(string));
    
            var pacienteemailParameter = pacienteemail != null ?
                new ObjectParameter("Pacienteemail", pacienteemail) :
                new ObjectParameter("Pacienteemail", typeof(string));
    
            var observacionParameter = observacion != null ?
                new ObjectParameter("Observacion", observacion) :
                new ObjectParameter("Observacion", typeof(string));
    
            var nroLoteParameter = nroLote != null ?
                new ObjectParameter("NroLote", nroLote) :
                new ObjectParameter("NroLote", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var ipCreacionParameter = ipCreacion != null ?
                new ObjectParameter("IpCreacion", ipCreacion) :
                new ObjectParameter("IpCreacion", typeof(string));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("WCO_InsertarPreAdmision", idPreAdmisionParameter, fechaProgramacionParameter, tipoOperacionIdParameter, clienteParameter, accesoParameter, servicioParameter, sucursalParameter, codigoHCParameter, codigoOAParameter, tipoAtencionParameter, tipoOrdenParameter, numerocamaParameter, pacienteNombresParameter, pacienteAPPaternoParameter, pacienteAPMaternoParameter, fechaNacimientoParameter, sexoParameter, tipoDocumentoParameter, documentoParameter, especialidad_NombreParameter, idOrdenAtencionParameter, lineaParameter, componenteParameter, componenteNombreParameter, cantidadSolicitadaParameter, medicoNombresParameter, medicoAPPaternoParameter, medicoAPMaternoParameter, cMPParameter, aseguradora_RUCParameter, aseguradora_NombreParameter, empleadora_RUCParameter, empleadora_NombreParameter, fechaLimiteAtencionParameter, pacienteTelefonoParameter, pacienteemailParameter, observacionParameter, nroLoteParameter, estadoParameter, ipCreacionParameter, usuarioCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAdmisionReferencia_Result> WCO_ListarAdmisionReferencia(Nullable<int> idAdmision)
        {
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAdmisionReferencia_Result>("WCO_ListarAdmisionReferencia", idAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAseguradora_Result> WCO_ListarAseguradora(string nombre, Nullable<int> idAseguradora, Nullable<int> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idAseguradoraParameter = idAseguradora.HasValue ?
                new ObjectParameter("IdAseguradora", idAseguradora) :
                new ObjectParameter("IdAseguradora", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAseguradora_Result>("WCO_ListarAseguradora", nombreParameter, idAseguradoraParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarConfiguracionCorreo_Result> WCO_ListarConfiguracionCorreo(string companiaCodigo, string parametroClave)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarConfiguracionCorreo_Result>("WCO_ListarConfiguracionCorreo", companiaCodigoParameter, parametroClaveParameter);
        }
    
        public virtual ObjectResult<WCO_ListarEmpleados_Result> WCO_ListarEmpleados(Nullable<int> uneuNegocioId, string companiaSocio, Nullable<int> idempleado, string tipoDocumento, string documento, string nombre, string tipoTrabajador, string cargo, string estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var companiaSocioParameter = companiaSocio != null ?
                new ObjectParameter("CompaniaSocio", companiaSocio) :
                new ObjectParameter("CompaniaSocio", typeof(string));
    
            var idempleadoParameter = idempleado.HasValue ?
                new ObjectParameter("Idempleado", idempleado) :
                new ObjectParameter("Idempleado", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var tipoTrabajadorParameter = tipoTrabajador != null ?
                new ObjectParameter("tipoTrabajador", tipoTrabajador) :
                new ObjectParameter("tipoTrabajador", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarEmpleados_Result>("WCO_ListarEmpleados", uneuNegocioIdParameter, companiaSocioParameter, idempleadoParameter, tipoDocumentoParameter, documentoParameter, nombreParameter, tipoTrabajadorParameter, cargoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarEspecialidad_Result> WCO_ListarEspecialidad(Nullable<int> idEspecialidad, string codigo, string descripcion, Nullable<int> estado)
        {
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarEspecialidad_Result>("WCO_ListarEspecialidad", idEspecialidadParameter, codigoParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarHomologacion_Result> WCO_ListarHomologacion(Nullable<int> uneuNegocioId, string codigoComponente, string codigoHomologado, Nullable<int> estado, Nullable<int> idEmpresa)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var codigoHomologadoParameter = codigoHomologado != null ?
                new ObjectParameter("CodigoHomologado", codigoHomologado) :
                new ObjectParameter("CodigoHomologado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarHomologacion_Result>("WCO_ListarHomologacion", uneuNegocioIdParameter, codigoComponenteParameter, codigoHomologadoParameter, estadoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarHomologacionCliente_Result> WCO_ListarHomologacionCliente(Nullable<int> idPersona, string estado)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarHomologacionCliente_Result>("WCO_ListarHomologacionCliente", idPersonaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarHomologacionPreAdmision_Result> WCO_ListarHomologacionPreAdmision(Nullable<int> uneuNegocioId, string codigoComponente, string codigoHomologado, Nullable<int> estado, Nullable<int> idEmpresa, string documento)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var codigoHomologadoParameter = codigoHomologado != null ?
                new ObjectParameter("CodigoHomologado", codigoHomologado) :
                new ObjectParameter("CodigoHomologado", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarHomologacionPreAdmision_Result>("WCO_ListarHomologacionPreAdmision", uneuNegocioIdParameter, codigoComponenteParameter, codigoHomologadoParameter, estadoParameter, idEmpresaParameter, documentoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarListaBase_Result> WCO_ListarListaBase(string descripcion, Nullable<int> estado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarListaBase_Result>("WCO_ListarListaBase", descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMedico_Result> WCO_ListarMedico(string nombreCompleto, Nullable<int> estado, string tipoDocumento, string documento, string cMP, Nullable<int> medicoId, Nullable<int> idEspecialidad)
        {
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var cMPParameter = cMP != null ?
                new ObjectParameter("CMP", cMP) :
                new ObjectParameter("CMP", typeof(string));
    
            var medicoIdParameter = medicoId.HasValue ?
                new ObjectParameter("MedicoId", medicoId) :
                new ObjectParameter("MedicoId", typeof(int));
    
            var idEspecialidadParameter = idEspecialidad.HasValue ?
                new ObjectParameter("IdEspecialidad", idEspecialidad) :
                new ObjectParameter("IdEspecialidad", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMedico_Result>("WCO_ListarMedico", nombreCompletoParameter, estadoParameter, tipoDocumentoParameter, documentoParameter, cMPParameter, medicoIdParameter, idEspecialidadParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMenuOpcionesPerfil_Result> WCO_ListarMenuOpcionesPerfil(string pERFIL, string aPLICACIONCODIGO)
        {
            var pERFILParameter = pERFIL != null ?
                new ObjectParameter("PERFIL", pERFIL) :
                new ObjectParameter("PERFIL", typeof(string));
    
            var aPLICACIONCODIGOParameter = aPLICACIONCODIGO != null ?
                new ObjectParameter("APLICACIONCODIGO", aPLICACIONCODIGO) :
                new ObjectParameter("APLICACIONCODIGO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMenuOpcionesPerfil_Result>("WCO_ListarMenuOpcionesPerfil", pERFILParameter, aPLICACIONCODIGOParameter);
        }
    
        public virtual ObjectResult<WCO_ListarModServDetalle_Result> WCO_ListarModServDetalle(Nullable<int> uneuNegocioId, Nullable<int> modeloServicioId, string codigoComponente, Nullable<int> tipoOperacionID, string descripcion)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarModServDetalle_Result>("WCO_ListarModServDetalle", uneuNegocioIdParameter, modeloServicioIdParameter, codigoComponenteParameter, tipoOperacionIDParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMonedaMast_Result> WCO_ListarMonedaMast(string estado)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMonedaMast_Result>("WCO_ListarMonedaMast", estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarMuestra_Result> WCO_ListarMuestra(string nombre, Nullable<int> idMuestra, Nullable<int> estado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idMuestraParameter = idMuestra.HasValue ?
                new ObjectParameter("IdMuestra", idMuestra) :
                new ObjectParameter("IdMuestra", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarMuestra_Result>("WCO_ListarMuestra", nombreParameter, idMuestraParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarParametro_Result> WCO_ListarParametro(string companiaCodigo, string aplicacionCodigo, string parametroClave, string descripcionParametro, string tipodeDatoFlag, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var aplicacionCodigoParameter = aplicacionCodigo != null ?
                new ObjectParameter("AplicacionCodigo", aplicacionCodigo) :
                new ObjectParameter("AplicacionCodigo", typeof(string));
    
            var parametroClaveParameter = parametroClave != null ?
                new ObjectParameter("ParametroClave", parametroClave) :
                new ObjectParameter("ParametroClave", typeof(string));
    
            var descripcionParametroParameter = descripcionParametro != null ?
                new ObjectParameter("DescripcionParametro", descripcionParametro) :
                new ObjectParameter("DescripcionParametro", typeof(string));
    
            var tipodeDatoFlagParameter = tipodeDatoFlag != null ?
                new ObjectParameter("TipodeDatoFlag", tipodeDatoFlag) :
                new ObjectParameter("TipodeDatoFlag", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarParametro_Result>("WCO_ListarParametro", companiaCodigoParameter, aplicacionCodigoParameter, parametroClaveParameter, descripcionParametroParameter, tipodeDatoFlagParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_LISTARPERFILPAG_Result> WCO_LISTARPERFILPAG(string estado, string perfil)
        {
            var estadoParameter = estado != null ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(string));
    
            var perfilParameter = perfil != null ?
                new ObjectParameter("perfil", perfil) :
                new ObjectParameter("perfil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_LISTARPERFILPAG_Result>("WCO_LISTARPERFILPAG", estadoParameter, perfilParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPersonasGeneral_Result> WCO_ListarPersonasGeneral(string nOMBRECOMPLETO, string tipoDocumento, string documento, string tipoPersona, string estado, string esEmpleado)
        {
            var nOMBRECOMPLETOParameter = nOMBRECOMPLETO != null ?
                new ObjectParameter("NOMBRECOMPLETO", nOMBRECOMPLETO) :
                new ObjectParameter("NOMBRECOMPLETO", typeof(string));
    
            var tipoDocumentoParameter = tipoDocumento != null ?
                new ObjectParameter("TipoDocumento", tipoDocumento) :
                new ObjectParameter("TipoDocumento", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var tipoPersonaParameter = tipoPersona != null ?
                new ObjectParameter("TipoPersona", tipoPersona) :
                new ObjectParameter("TipoPersona", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var esEmpleadoParameter = esEmpleado != null ?
                new ObjectParameter("EsEmpleado", esEmpleado) :
                new ObjectParameter("EsEmpleado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPersonasGeneral_Result>("WCO_ListarPersonasGeneral", nOMBRECOMPLETOParameter, tipoDocumentoParameter, documentoParameter, tipoPersonaParameter, estadoParameter, esEmpleadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPortal_Result> WCO_ListarPortal(Nullable<int> idPortal, Nullable<int> estado)
        {
            var idPortalParameter = idPortal.HasValue ?
                new ObjectParameter("IdPortal", idPortal) :
                new ObjectParameter("IdPortal", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPortal_Result>("WCO_ListarPortal", idPortalParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSede_Result> WCO_ListarSede(string descripcionLocal, Nullable<int> idSede, Nullable<int> idEmpresa, Nullable<int> estado)
        {
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSede_Result>("WCO_ListarSede", descripcionLocalParameter, idSedeParameter, idEmpresaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSedeCliente_Result> WCO_ListarSedeCliente(Nullable<int> idSede, Nullable<int> idEmpresa, Nullable<int> idSedeCliente, string nombreCompleto, string sedCodigo)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idSedeClienteParameter = idSedeCliente.HasValue ?
                new ObjectParameter("IdSedeCliente", idSedeCliente) :
                new ObjectParameter("IdSedeCliente", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSedeCliente_Result>("WCO_ListarSedeCliente", idSedeParameter, idEmpresaParameter, idSedeClienteParameter, nombreCompletoParameter, sedCodigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSedePrinter_Result> WCO_ListarSedePrinter(Nullable<int> idPrinter, Nullable<int> idSede, string ip, string shared_Name)
        {
            var idPrinterParameter = idPrinter.HasValue ?
                new ObjectParameter("IdPrinter", idPrinter) :
                new ObjectParameter("IdPrinter", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var shared_NameParameter = shared_Name != null ?
                new ObjectParameter("Shared_Name", shared_Name) :
                new ObjectParameter("Shared_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSedePrinter_Result>("WCO_ListarSedePrinter", idPrinterParameter, idSedeParameter, ipParameter, shared_NameParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSedeSucursal_Result> WCO_ListarSedeSucursal(string clasificadorMovimiento, string companiaCodigo, string sucursal, Nullable<int> idSede, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSedeSucursal_Result>("WCO_ListarSedeSucursal", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, idSedeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSedeSucursalNegocio_Result> WCO_ListarSedeSucursalNegocio(string clasificadorMovimiento, string companiaCodigo, string sucursal, Nullable<int> idSede, string tipoComprobante, string serie, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSedeSucursalNegocio_Result>("WCO_ListarSedeSucursalNegocio", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, idSedeParameter, tipoComprobanteParameter, serieParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTablaMaestroDetalle_Result> WCO_ListarTablaMaestroDetalle(string codigoTabla)
        {
            var codigoTablaParameter = codigoTabla != null ?
                new ObjectParameter("CodigoTabla", codigoTabla) :
                new ObjectParameter("CodigoTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTablaMaestroDetalle_Result>("WCO_ListarTablaMaestroDetalle", codigoTablaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTablasMaestras_Result> WCO_ListarTablasMaestras(Nullable<int> idtabla, string nombre, Nullable<int> estado, string codigo)
        {
            var idtablaParameter = idtabla.HasValue ?
                new ObjectParameter("Idtabla", idtabla) :
                new ObjectParameter("Idtabla", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTablasMaestras_Result>("WCO_ListarTablasMaestras", idtablaParameter, nombreParameter, estadoParameter, codigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambioComercial_Result> WCO_ListarTipoCambioComercial(Nullable<int> idTipoCambio, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, string estado)
        {
            var idTipoCambioParameter = idTipoCambio.HasValue ?
                new ObjectParameter("IdTipoCambio", idTipoCambio) :
                new ObjectParameter("IdTipoCambio", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambioComercial_Result>("WCO_ListarTipoCambioComercial", idTipoCambioParameter, fechaInicioParameter, fechaFinParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorreoNegocio_Result> WCO_ListarCorreoNegocio(Nullable<int> uneuNegocioId, Nullable<int> idCorreo, string correo, Nullable<int> estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idCorreoParameter = idCorreo.HasValue ?
                new ObjectParameter("IdCorreo", idCorreo) :
                new ObjectParameter("IdCorreo", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorreoNegocio_Result>("WCO_ListarCorreoNegocio", uneuNegocioIdParameter, idCorreoParameter, correoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorreoNegocioDetalle_Result> WCO_ListarCorreoNegocioDetalle(Nullable<int> idCorreo, Nullable<int> idCorreoDet, Nullable<int> uneuNegocioId)
        {
            var idCorreoParameter = idCorreo.HasValue ?
                new ObjectParameter("IdCorreo", idCorreo) :
                new ObjectParameter("IdCorreo", typeof(int));
    
            var idCorreoDetParameter = idCorreoDet.HasValue ?
                new ObjectParameter("IdCorreoDet", idCorreoDet) :
                new ObjectParameter("IdCorreoDet", typeof(int));
    
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorreoNegocioDetalle_Result>("WCO_ListarCorreoNegocioDetalle", idCorreoParameter, idCorreoDetParameter, uneuNegocioIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoOperacionCliente_Result> WCO_ListarTipoOperacionCliente(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado, string cliente, string documento, Nullable<int> idSede, string sedCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            var clienteParameter = cliente != null ?
                new ObjectParameter("Cliente", cliente) :
                new ObjectParameter("Cliente", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoOperacionCliente_Result>("WCO_ListarTipoOperacionCliente", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter, clienteParameter, documentoParameter, idSedeParameter, sedCodigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoPaciente_Result> WCO_ListarTipoPaciente(Nullable<int> tipoPacienteId, Nullable<int> tipoAdmisionId, string codigo, string descripcion, Nullable<int> estado)
        {
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoPaciente_Result>("WCO_ListarTipoPaciente", tipoPacienteIdParameter, tipoAdmisionIdParameter, codigoParameter, descripcionParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPreCarga_Result> WCO_ListarPreCarga(string al_Servicio, string al_Sucursal, string al_CodigoOA, Nullable<int> al_Linea, string al_NombreCompleto, string al_Documento, Nullable<int> estado)
        {
            var al_ServicioParameter = al_Servicio != null ?
                new ObjectParameter("al_Servicio", al_Servicio) :
                new ObjectParameter("al_Servicio", typeof(string));
    
            var al_SucursalParameter = al_Sucursal != null ?
                new ObjectParameter("al_Sucursal", al_Sucursal) :
                new ObjectParameter("al_Sucursal", typeof(string));
    
            var al_CodigoOAParameter = al_CodigoOA != null ?
                new ObjectParameter("al_CodigoOA", al_CodigoOA) :
                new ObjectParameter("al_CodigoOA", typeof(string));
    
            var al_LineaParameter = al_Linea.HasValue ?
                new ObjectParameter("al_Linea", al_Linea) :
                new ObjectParameter("al_Linea", typeof(int));
    
            var al_NombreCompletoParameter = al_NombreCompleto != null ?
                new ObjectParameter("al_NombreCompleto", al_NombreCompleto) :
                new ObjectParameter("al_NombreCompleto", typeof(string));
    
            var al_DocumentoParameter = al_Documento != null ?
                new ObjectParameter("al_Documento", al_Documento) :
                new ObjectParameter("al_Documento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPreCarga_Result>("WCO_ListarPreCarga", al_ServicioParameter, al_SucursalParameter, al_CodigoOAParameter, al_LineaParameter, al_NombreCompletoParameter, al_DocumentoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSerie_Result> WCO_ListarSerie(string compania, string tipoComprobante)
        {
            var companiaParameter = compania != null ?
                new ObjectParameter("Compania", compania) :
                new ObjectParameter("Compania", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSerie_Result>("WCO_ListarSerie", companiaParameter, tipoComprobanteParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoCambio_Result> WCO_ListarTipoCambio()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoCambio_Result>("WCO_ListarTipoCambio");
        }
    
        public virtual ObjectResult<WCO_AccesoUsuario_Result> WCO_AccesoUsuario(string uSUARIO, string pASSWORD, Nullable<int> sEDE, Nullable<int> iDPERSONA, string tDOCUMENTO, string eXPERIRARPASSWORDFLAG)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var pASSWORDParameter = pASSWORD != null ?
                new ObjectParameter("PASSWORD", pASSWORD) :
                new ObjectParameter("PASSWORD", typeof(string));
    
            var sEDEParameter = sEDE.HasValue ?
                new ObjectParameter("SEDE", sEDE) :
                new ObjectParameter("SEDE", typeof(int));
    
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var tDOCUMENTOParameter = tDOCUMENTO != null ?
                new ObjectParameter("TDOCUMENTO", tDOCUMENTO) :
                new ObjectParameter("TDOCUMENTO", typeof(string));
    
            var eXPERIRARPASSWORDFLAGParameter = eXPERIRARPASSWORDFLAG != null ?
                new ObjectParameter("EXPERIRARPASSWORDFLAG", eXPERIRARPASSWORDFLAG) :
                new ObjectParameter("EXPERIRARPASSWORDFLAG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_AccesoUsuario_Result>("WCO_AccesoUsuario", uSUARIOParameter, pASSWORDParameter, sEDEParameter, iDPERSONAParameter, tDOCUMENTOParameter, eXPERIRARPASSWORDFLAGParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComprobanteFormaPago_Result> WCO_ListarComprobanteFormaPago(Nullable<int> idComprobante, Nullable<int> idLinea, Nullable<int> estado)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComprobanteFormaPago_Result>("WCO_ListarComprobanteFormaPago", idComprobanteParameter, idLineaParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCorrelativosMast_Result> WCO_ListarCorrelativosMast(string companiaCodigo, string tipoComprobante, string serie, string sedCodigo, Nullable<int> idSede, string estado)
        {
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var sedCodigoParameter = sedCodigo != null ?
                new ObjectParameter("SedCodigo", sedCodigo) :
                new ObjectParameter("SedCodigo", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCorrelativosMast_Result>("WCO_ListarCorrelativosMast", companiaCodigoParameter, tipoComprobanteParameter, serieParameter, sedCodigoParameter, idSedeParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCostCenterMst_Result> WCO_ListarCostCenterMst(string costCenter, string localName)
        {
            var costCenterParameter = costCenter != null ?
                new ObjectParameter("CostCenter", costCenter) :
                new ObjectParameter("CostCenter", typeof(string));
    
            var localNameParameter = localName != null ?
                new ObjectParameter("LocalName", localName) :
                new ObjectParameter("LocalName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCostCenterMst_Result>("WCO_ListarCostCenterMst", costCenterParameter, localNameParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCuentaBancaria_Result> WCO_ListarCuentaBancaria(string cuentaBancaria, Nullable<int> banco, string estado)
        {
            var cuentaBancariaParameter = cuentaBancaria != null ?
                new ObjectParameter("CuentaBancaria", cuentaBancaria) :
                new ObjectParameter("CuentaBancaria", typeof(string));
    
            var bancoParameter = banco.HasValue ?
                new ObjectParameter("Banco", banco) :
                new ObjectParameter("Banco", typeof(int));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCuentaBancaria_Result>("WCO_ListarCuentaBancaria", cuentaBancariaParameter, bancoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarExpediente_Result> WCO_ListarExpediente(Nullable<int> uneuNegocioId, Nullable<int> idExpediente, string codigoExpediente, string clasificadorMovimiento, Nullable<int> idTipoExpediente, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, Nullable<int> tipoAdmisionId, Nullable<int> idCliente, Nullable<int> idContrato, string descripcion)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var codigoExpedienteParameter = codigoExpediente != null ?
                new ObjectParameter("CodigoExpediente", codigoExpediente) :
                new ObjectParameter("CodigoExpediente", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var idTipoExpedienteParameter = idTipoExpediente.HasValue ?
                new ObjectParameter("IdTipoExpediente", idTipoExpediente) :
                new ObjectParameter("IdTipoExpediente", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var idContratoParameter = idContrato.HasValue ?
                new ObjectParameter("IdContrato", idContrato) :
                new ObjectParameter("IdContrato", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarExpediente_Result>("WCO_ListarExpediente", uneuNegocioIdParameter, idExpedienteParameter, codigoExpedienteParameter, clasificadorMovimientoParameter, idTipoExpedienteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, tipoAdmisionIdParameter, idClienteParameter, idContratoParameter, descripcionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarProduccion_Result> WCO_ListarProduccion(Nullable<int> tipoAdmisionId, Nullable<int> clienteId, Nullable<int> tipoPacienteId, Nullable<int> idSede, Nullable<int> tipoAtencionId, Nullable<int> aseguradoraId, Nullable<int> empresaId, Nullable<int> pacienteId, Nullable<int> tipoOperacionId, Nullable<int> idClasificacion, string codigoComponente, string nombreComponente, Nullable<System.DateTime> pFecha1, Nullable<System.DateTime> pFecha2, string clasificadorMovimiento, Nullable<int> estado, string periodo, string nroPeticion)
        {
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var tipoAtencionIdParameter = tipoAtencionId.HasValue ?
                new ObjectParameter("TipoAtencionId", tipoAtencionId) :
                new ObjectParameter("TipoAtencionId", typeof(int));
    
            var aseguradoraIdParameter = aseguradoraId.HasValue ?
                new ObjectParameter("AseguradoraId", aseguradoraId) :
                new ObjectParameter("AseguradoraId", typeof(int));
    
            var empresaIdParameter = empresaId.HasValue ?
                new ObjectParameter("EmpresaId", empresaId) :
                new ObjectParameter("EmpresaId", typeof(int));
    
            var pacienteIdParameter = pacienteId.HasValue ?
                new ObjectParameter("PacienteId", pacienteId) :
                new ObjectParameter("PacienteId", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var nombreComponenteParameter = nombreComponente != null ?
                new ObjectParameter("NombreComponente", nombreComponente) :
                new ObjectParameter("NombreComponente", typeof(string));
    
            var pFecha1Parameter = pFecha1.HasValue ?
                new ObjectParameter("pFecha1", pFecha1) :
                new ObjectParameter("pFecha1", typeof(System.DateTime));
    
            var pFecha2Parameter = pFecha2.HasValue ?
                new ObjectParameter("pFecha2", pFecha2) :
                new ObjectParameter("pFecha2", typeof(System.DateTime));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarProduccion_Result>("WCO_ListarProduccion", tipoAdmisionIdParameter, clienteIdParameter, tipoPacienteIdParameter, idSedeParameter, tipoAtencionIdParameter, aseguradoraIdParameter, empresaIdParameter, pacienteIdParameter, tipoOperacionIdParameter, idClasificacionParameter, codigoComponenteParameter, nombreComponenteParameter, pFecha1Parameter, pFecha2Parameter, clasificadorMovimientoParameter, estadoParameter, periodoParameter, nroPeticionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarProduccionGeneral_Result> WCO_ListarProduccionGeneral(Nullable<int> uneuNegocioId, string periodo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarProduccionGeneral_Result>("WCO_ListarProduccionGeneral", uneuNegocioIdParameter, periodoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarPeriodoEmision_Result> WCO_ListarPeriodoEmision(Nullable<int> uneuNegocioId)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarPeriodoEmision_Result>("WCO_ListarPeriodoEmision", uneuNegocioIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSucursal_Result> WCO_ListarSucursal(string descripcionLocal, string sucursal, string companiaCodigo, string estado)
        {
            var descripcionLocalParameter = descripcionLocal != null ?
                new ObjectParameter("DescripcionLocal", descripcionLocal) :
                new ObjectParameter("DescripcionLocal", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSucursal_Result>("WCO_ListarSucursal", descripcionLocalParameter, sucursalParameter, companiaCodigoParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoPago_Result> WCO_ListarTipoPago(Nullable<int> id, Nullable<int> idCodigo, string nombre, Nullable<int> estado, Nullable<int> visible)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idCodigoParameter = idCodigo.HasValue ?
                new ObjectParameter("IdCodigo", idCodigo) :
                new ObjectParameter("IdCodigo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoPago_Result>("WCO_ListarTipoPago", idParameter, idCodigoParameter, nombreParameter, estadoParameter, visibleParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSucursalCompSerie_Result> WCO_ListarSucursalCompSerie(string clasificadorMovimiento, string companiaCodigo, string sucursal, string tipoComprobante, string estado)
        {
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSucursalCompSerie_Result>("WCO_ListarSucursalCompSerie", clasificadorMovimientoParameter, companiaCodigoParameter, sucursalParameter, tipoComprobanteParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoTrabajador_Result> WCO_ListarTipoTrabajador(string pTipoTrabajador, string pDescripcion, string pEstado)
        {
            var pTipoTrabajadorParameter = pTipoTrabajador != null ?
                new ObjectParameter("pTipoTrabajador", pTipoTrabajador) :
                new ObjectParameter("pTipoTrabajador", typeof(string));
    
            var pDescripcionParameter = pDescripcion != null ?
                new ObjectParameter("pDescripcion", pDescripcion) :
                new ObjectParameter("pDescripcion", typeof(string));
    
            var pEstadoParameter = pEstado != null ?
                new ObjectParameter("pEstado", pEstado) :
                new ObjectParameter("pEstado", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoTrabajador_Result>("WCO_ListarTipoTrabajador", pTipoTrabajadorParameter, pDescripcionParameter, pEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ExportarCobranza_Result> WCO_ExportarCobranza(Nullable<int> idCobranza, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, Nullable<int> idExpediente, Nullable<int> idAdmision)
        {
            var idCobranzaParameter = idCobranza.HasValue ?
                new ObjectParameter("IdCobranza", idCobranza) :
                new ObjectParameter("IdCobranza", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ExportarCobranza_Result>("WCO_ExportarCobranza", idCobranzaParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, idExpedienteParameter, idAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_ExportarCobranzaDetalle_Result> WCO_ExportarCobranzaDetalle(Nullable<int> idCobranza, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, Nullable<int> idExpediente, Nullable<int> idAdmision)
        {
            var idCobranzaParameter = idCobranza.HasValue ?
                new ObjectParameter("IdCobranza", idCobranza) :
                new ObjectParameter("IdCobranza", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ExportarCobranzaDetalle_Result>("WCO_ExportarCobranzaDetalle", idCobranzaParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, idExpedienteParameter, idAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_ExportarComprobante_Result> WCO_ExportarComprobante(Nullable<int> uneuNegocioId, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ExportarComprobante_Result>("WCO_ExportarComprobante", uneuNegocioIdParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter);
        }
    
        public virtual ObjectResult<WCO_ExportarComprobanteCobranza_Result> WCO_ExportarComprobanteCobranza(Nullable<int> idCobranza, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, Nullable<int> idExpediente, Nullable<int> idAdmision)
        {
            var idCobranzaParameter = idCobranza.HasValue ?
                new ObjectParameter("IdCobranza", idCobranza) :
                new ObjectParameter("IdCobranza", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ExportarComprobanteCobranza_Result>("WCO_ExportarComprobanteCobranza", idCobranzaParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, idExpedienteParameter, idAdmisionParameter);
        }
    
        public virtual ObjectResult<WCO_ExportarComprobanteDetalle_Result> WCO_ExportarComprobanteDetalle(Nullable<int> uneuNegocioId, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ExportarComprobanteDetalle_Result>("WCO_ExportarComprobanteDetalle", uneuNegocioIdParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCobranzaDetalleId_Result> WCO_ListarCobranzaDetalleId(Nullable<int> idCobranza, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, Nullable<int> idExpediente, Nullable<int> idAdmision, string usuarioCreacion)
        {
            var idCobranzaParameter = idCobranza.HasValue ?
                new ObjectParameter("IdCobranza", idCobranza) :
                new ObjectParameter("IdCobranza", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCobranzaDetalleId_Result>("WCO_ListarCobranzaDetalleId", idCobranzaParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, idExpedienteParameter, idAdmisionParameter, usuarioCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarCobranza_Result> WCO_ListarCobranza(Nullable<int> idCobranza, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, string cajero)
        {
            var idCobranzaParameter = idCobranza.HasValue ?
                new ObjectParameter("IdCobranza", idCobranza) :
                new ObjectParameter("IdCobranza", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var cajeroParameter = cajero != null ?
                new ObjectParameter("Cajero", cajero) :
                new ObjectParameter("Cajero", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarCobranza_Result>("WCO_ListarCobranza", idCobranzaParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, cajeroParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComprobanteId_Result> WCO_ListarComprobanteId(Nullable<int> uneuNegocioId, Nullable<int> idComprobante, string numeroComprobante, string tipoComprobante, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, string serie, Nullable<int> idPersona, string sucursal, string documento, string idClasificadorMovimiento, string companiaCodigo, Nullable<int> conceptoFacturacion, Nullable<int> estadoSunatElectronico)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var numeroComprobanteParameter = numeroComprobante != null ?
                new ObjectParameter("NumeroComprobante", numeroComprobante) :
                new ObjectParameter("NumeroComprobante", typeof(string));
    
            var tipoComprobanteParameter = tipoComprobante != null ?
                new ObjectParameter("TipoComprobante", tipoComprobante) :
                new ObjectParameter("TipoComprobante", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idClasificadorMovimientoParameter = idClasificadorMovimiento != null ?
                new ObjectParameter("IdClasificadorMovimiento", idClasificadorMovimiento) :
                new ObjectParameter("IdClasificadorMovimiento", typeof(string));
    
            var companiaCodigoParameter = companiaCodigo != null ?
                new ObjectParameter("CompaniaCodigo", companiaCodigo) :
                new ObjectParameter("CompaniaCodigo", typeof(string));
    
            var conceptoFacturacionParameter = conceptoFacturacion.HasValue ?
                new ObjectParameter("ConceptoFacturacion", conceptoFacturacion) :
                new ObjectParameter("ConceptoFacturacion", typeof(int));
    
            var estadoSunatElectronicoParameter = estadoSunatElectronico.HasValue ?
                new ObjectParameter("EstadoSunatElectronico", estadoSunatElectronico) :
                new ObjectParameter("EstadoSunatElectronico", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComprobanteId_Result>("WCO_ListarComprobanteId", uneuNegocioIdParameter, idComprobanteParameter, numeroComprobanteParameter, tipoComprobanteParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, serieParameter, idPersonaParameter, sucursalParameter, documentoParameter, idClasificadorMovimientoParameter, companiaCodigoParameter, conceptoFacturacionParameter, estadoSunatElectronicoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComprobanteDetalleId_Result> WCO_ListarComprobanteDetalleId(Nullable<int> idComprobante, Nullable<int> idLinea, Nullable<int> estado, string codigoComponente)
        {
            var idComprobanteParameter = idComprobante.HasValue ?
                new ObjectParameter("IdComprobante", idComprobante) :
                new ObjectParameter("IdComprobante", typeof(int));
    
            var idLineaParameter = idLinea.HasValue ?
                new ObjectParameter("IdLinea", idLinea) :
                new ObjectParameter("IdLinea", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComprobanteDetalleId_Result>("WCO_ListarComprobanteDetalleId", idComprobanteParameter, idLineaParameter, estadoParameter, codigoComponenteParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComponente_Result> WCO_ListarComponente(Nullable<int> idClasificacion, string codigoComponente, string descripcion, Nullable<int> estado, Nullable<int> modeloServicioId, Nullable<int> tipoOperacionID, Nullable<int> tipoPacienteId, string clasificadorMovimiento)
        {
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var tipoOperacionIDParameter = tipoOperacionID.HasValue ?
                new ObjectParameter("TipoOperacionID", tipoOperacionID) :
                new ObjectParameter("TipoOperacionID", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComponente_Result>("WCO_ListarComponente", idClasificacionParameter, codigoComponenteParameter, descripcionParameter, estadoParameter, modeloServicioIdParameter, tipoOperacionIDParameter, tipoPacienteIdParameter, clasificadorMovimientoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarExpedienteDetalle_Result> WCO_ListarExpedienteDetalle(Nullable<int> idExpediente, Nullable<int> idSecuencia, Nullable<int> estado, string periodo, string nroPeticion, string codigoComponente)
        {
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var idSecuenciaParameter = idSecuencia.HasValue ?
                new ObjectParameter("IdSecuencia", idSecuencia) :
                new ObjectParameter("IdSecuencia", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var periodoParameter = periodo != null ?
                new ObjectParameter("Periodo", periodo) :
                new ObjectParameter("Periodo", typeof(string));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarExpedienteDetalle_Result>("WCO_ListarExpedienteDetalle", idExpedienteParameter, idSecuenciaParameter, estadoParameter, periodoParameter, nroPeticionParameter, codigoComponenteParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoOperacionClienteSede_Result> WCO_ListarTipoOperacionClienteSede(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoOperacionClienteSede_Result>("WCO_ListarTipoOperacionClienteSede", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarTipoOperacionClienteTipoPaciente_Result> WCO_ListarTipoOperacionClienteTipoPaciente(Nullable<int> uneuNegocioId, Nullable<int> persona, Nullable<int> tipoAdmisionId, Nullable<int> tipEstado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var tipoAdmisionIdParameter = tipoAdmisionId.HasValue ?
                new ObjectParameter("TipoAdmisionId", tipoAdmisionId) :
                new ObjectParameter("TipoAdmisionId", typeof(int));
    
            var tipEstadoParameter = tipEstado.HasValue ?
                new ObjectParameter("TipEstado", tipEstado) :
                new ObjectParameter("TipEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarTipoOperacionClienteTipoPaciente_Result>("WCO_ListarTipoOperacionClienteTipoPaciente", uneuNegocioIdParameter, personaParameter, tipoAdmisionIdParameter, tipEstadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComponenteMaestro_Result> WCO_ListarComponenteMaestro(Nullable<int> idClasificacion, string codigoComponente, string descripcion, Nullable<int> estado, string clasificadorMovimiento)
        {
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            var codigoComponenteParameter = codigoComponente != null ?
                new ObjectParameter("CodigoComponente", codigoComponente) :
                new ObjectParameter("CodigoComponente", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComponenteMaestro_Result>("WCO_ListarComponenteMaestro", idClasificacionParameter, codigoComponenteParameter, descripcionParameter, estadoParameter, clasificadorMovimientoParameter);
        }
    
        public virtual ObjectResult<WCO_UnificarAtencionPaciente_Result> WCO_UnificarAtencionPaciente(Nullable<int> idAdmision, Nullable<int> idPersona, string documento, Nullable<int> idUnificador, string usuarioCreacion)
        {
            var idAdmisionParameter = idAdmision.HasValue ?
                new ObjectParameter("IdAdmision", idAdmision) :
                new ObjectParameter("IdAdmision", typeof(int));
    
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var documentoParameter = documento != null ?
                new ObjectParameter("Documento", documento) :
                new ObjectParameter("Documento", typeof(string));
    
            var idUnificadorParameter = idUnificador.HasValue ?
                new ObjectParameter("IdUnificador", idUnificador) :
                new ObjectParameter("IdUnificador", typeof(int));
    
            var usuarioCreacionParameter = usuarioCreacion != null ?
                new ObjectParameter("UsuarioCreacion", usuarioCreacion) :
                new ObjectParameter("UsuarioCreacion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_UnificarAtencionPaciente_Result>("WCO_UnificarAtencionPaciente", idAdmisionParameter, idPersonaParameter, documentoParameter, idUnificadorParameter, usuarioCreacionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarExpedienteParticulares_Result> WCO_ListarExpedienteParticulares(Nullable<int> uneuNegocioId, Nullable<int> idExpediente, string nroPeticion, string clasificadorMovimiento, Nullable<int> idTipoExpediente, Nullable<int> idTipoAdmision, Nullable<int> persona, string ordenAtencion, string historiaClinica, Nullable<int> idSede, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFinal, Nullable<int> estado, Nullable<int> estadoAdmsion)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var idExpedienteParameter = idExpediente.HasValue ?
                new ObjectParameter("IdExpediente", idExpediente) :
                new ObjectParameter("IdExpediente", typeof(int));
    
            var nroPeticionParameter = nroPeticion != null ?
                new ObjectParameter("NroPeticion", nroPeticion) :
                new ObjectParameter("NroPeticion", typeof(string));
    
            var clasificadorMovimientoParameter = clasificadorMovimiento != null ?
                new ObjectParameter("ClasificadorMovimiento", clasificadorMovimiento) :
                new ObjectParameter("ClasificadorMovimiento", typeof(string));
    
            var idTipoExpedienteParameter = idTipoExpediente.HasValue ?
                new ObjectParameter("IdTipoExpediente", idTipoExpediente) :
                new ObjectParameter("IdTipoExpediente", typeof(int));
    
            var idTipoAdmisionParameter = idTipoAdmision.HasValue ?
                new ObjectParameter("IdTipoAdmision", idTipoAdmision) :
                new ObjectParameter("IdTipoAdmision", typeof(int));
    
            var personaParameter = persona.HasValue ?
                new ObjectParameter("Persona", persona) :
                new ObjectParameter("Persona", typeof(int));
    
            var ordenAtencionParameter = ordenAtencion != null ?
                new ObjectParameter("OrdenAtencion", ordenAtencion) :
                new ObjectParameter("OrdenAtencion", typeof(string));
    
            var historiaClinicaParameter = historiaClinica != null ?
                new ObjectParameter("HistoriaClinica", historiaClinica) :
                new ObjectParameter("HistoriaClinica", typeof(string));
    
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("FechaFinal", fechaFinal) :
                new ObjectParameter("FechaFinal", typeof(System.DateTime));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var estadoAdmsionParameter = estadoAdmsion.HasValue ?
                new ObjectParameter("EstadoAdmsion", estadoAdmsion) :
                new ObjectParameter("EstadoAdmsion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarExpedienteParticulares_Result>("WCO_ListarExpedienteParticulares", uneuNegocioIdParameter, idExpedienteParameter, nroPeticionParameter, clasificadorMovimientoParameter, idTipoExpedienteParameter, idTipoAdmisionParameter, personaParameter, ordenAtencionParameter, historiaClinicaParameter, idSedeParameter, fechaInicioParameter, fechaFinalParameter, estadoParameter, estadoAdmsionParameter);
        }
    
        public virtual ObjectResult<WCO_ListarSedeCompartida_Result> WCO_ListarSedeCompartida(Nullable<int> idSede, Nullable<int> idEmpresa, Nullable<int> idSedeCompartida)
        {
            var idSedeParameter = idSede.HasValue ?
                new ObjectParameter("IdSede", idSede) :
                new ObjectParameter("IdSede", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idSedeCompartidaParameter = idSedeCompartida.HasValue ?
                new ObjectParameter("IdSedeCompartida", idSedeCompartida) :
                new ObjectParameter("IdSedeCompartida", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarSedeCompartida_Result>("WCO_ListarSedeCompartida", idSedeParameter, idEmpresaParameter, idSedeCompartidaParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAutorizacionBeneficiario_Result> WCO_ListarAutorizacionBeneficiario(Nullable<int> uneuNegocioId, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin, Nullable<int> idTitularAutorizado, Nullable<int> idPaciente, Nullable<int> estado)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idTitularAutorizadoParameter = idTitularAutorizado.HasValue ?
                new ObjectParameter("IdTitularAutorizado", idTitularAutorizado) :
                new ObjectParameter("IdTitularAutorizado", typeof(int));
    
            var idPacienteParameter = idPaciente.HasValue ?
                new ObjectParameter("IdPaciente", idPaciente) :
                new ObjectParameter("IdPaciente", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAutorizacionBeneficiario_Result>("WCO_ListarAutorizacionBeneficiario", uneuNegocioIdParameter, fechaInicioParameter, fechaFinParameter, idTitularAutorizadoParameter, idPacienteParameter, estadoParameter);
        }
    
        public virtual ObjectResult<WCO_ListarComponentesdeListaB_Result> WCO_ListarComponentesdeListaB(Nullable<int> idlista, string codigo, string nombre, Nullable<int> estado, Nullable<int> idClasificacion)
        {
            var idlistaParameter = idlista.HasValue ?
                new ObjectParameter("idlista", idlista) :
                new ObjectParameter("idlista", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idClasificacionParameter = idClasificacion.HasValue ?
                new ObjectParameter("IdClasificacion", idClasificacion) :
                new ObjectParameter("IdClasificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarComponentesdeListaB_Result>("WCO_ListarComponentesdeListaB", idlistaParameter, codigoParameter, nombreParameter, estadoParameter, idClasificacionParameter);
        }
    
        public virtual ObjectResult<WCO_TRAERUSUARIOXCODIGO_Result> WCO_TRAERUSUARIOXCODIGO(string uSUARIO)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_TRAERUSUARIOXCODIGO_Result>("WCO_TRAERUSUARIOXCODIGO", uSUARIOParameter);
        }
    
        public virtual ObjectResult<WCO_ListarAprobadores_Result> WCO_ListarAprobadores(Nullable<int> idAprobador, Nullable<int> tipoDescuento, string idUsuario, Nullable<int> estado, Nullable<int> uneuNegocioId)
        {
            var idAprobadorParameter = idAprobador.HasValue ?
                new ObjectParameter("IdAprobador", idAprobador) :
                new ObjectParameter("IdAprobador", typeof(int));
    
            var tipoDescuentoParameter = tipoDescuento.HasValue ?
                new ObjectParameter("TipoDescuento", tipoDescuento) :
                new ObjectParameter("TipoDescuento", typeof(int));
    
            var idUsuarioParameter = idUsuario != null ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(string));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(int));
    
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarAprobadores_Result>("WCO_ListarAprobadores", idAprobadorParameter, tipoDescuentoParameter, idUsuarioParameter, estadoParameter, uneuNegocioIdParameter);
        }
    
        public virtual ObjectResult<WCO_ListarModeloServicio_Result> WCO_ListarModeloServicio(Nullable<int> uneuNegocioId, Nullable<int> modeloServicioId, string mosDescripcion, Nullable<int> mosEstado, Nullable<int> tipoOperacionId, Nullable<int> tIPOADMISIONID, Nullable<int> tipoPacienteId)
        {
            var uneuNegocioIdParameter = uneuNegocioId.HasValue ?
                new ObjectParameter("UneuNegocioId", uneuNegocioId) :
                new ObjectParameter("UneuNegocioId", typeof(int));
    
            var modeloServicioIdParameter = modeloServicioId.HasValue ?
                new ObjectParameter("ModeloServicioId", modeloServicioId) :
                new ObjectParameter("ModeloServicioId", typeof(int));
    
            var mosDescripcionParameter = mosDescripcion != null ?
                new ObjectParameter("MosDescripcion", mosDescripcion) :
                new ObjectParameter("MosDescripcion", typeof(string));
    
            var mosEstadoParameter = mosEstado.HasValue ?
                new ObjectParameter("MosEstado", mosEstado) :
                new ObjectParameter("MosEstado", typeof(int));
    
            var tipoOperacionIdParameter = tipoOperacionId.HasValue ?
                new ObjectParameter("TipoOperacionId", tipoOperacionId) :
                new ObjectParameter("TipoOperacionId", typeof(int));
    
            var tIPOADMISIONIDParameter = tIPOADMISIONID.HasValue ?
                new ObjectParameter("TIPOADMISIONID", tIPOADMISIONID) :
                new ObjectParameter("TIPOADMISIONID", typeof(int));
    
            var tipoPacienteIdParameter = tipoPacienteId.HasValue ?
                new ObjectParameter("TipoPacienteId", tipoPacienteId) :
                new ObjectParameter("TipoPacienteId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WCO_ListarModeloServicio_Result>("WCO_ListarModeloServicio", uneuNegocioIdParameter, modeloServicioIdParameter, mosDescripcionParameter, mosEstadoParameter, tipoOperacionIdParameter, tIPOADMISIONIDParameter, tipoPacienteIdParameter);
        }
    }
}
