//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WebApiServices.WebRoe {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendOrdenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrdenAnularOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrdenAnalisisAnularOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::WebApiServices.Properties.Settings.Default.WebApiServices_WebRoe_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendOrdenCompletedEventHandler SendOrdenCompleted;
        
        /// <remarks/>
        public event SendOrdenAnularCompletedEventHandler SendOrdenAnularCompleted;
        
        /// <remarks/>
        public event SendOrdenAnalisisAnularCompletedEventHandler SendOrdenAnalisisAnularCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrden", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOrden(string sede, string CodigoAtencion, string nombre, string apellidospaterno, string apellidomaterno, string fechanacimiento, string sexo, System.Data.DataTable DtAnalisis, string tipodoc, string Nrodoc, string codtiporoe, string empresa) {
            object[] results = this.Invoke("SendOrden", new object[] {
                        sede,
                        CodigoAtencion,
                        nombre,
                        apellidospaterno,
                        apellidomaterno,
                        fechanacimiento,
                        sexo,
                        DtAnalisis,
                        tipodoc,
                        Nrodoc,
                        codtiporoe,
                        empresa});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrdenAsync(string sede, string CodigoAtencion, string nombre, string apellidospaterno, string apellidomaterno, string fechanacimiento, string sexo, System.Data.DataTable DtAnalisis, string tipodoc, string Nrodoc, string codtiporoe, string empresa) {
            this.SendOrdenAsync(sede, CodigoAtencion, nombre, apellidospaterno, apellidomaterno, fechanacimiento, sexo, DtAnalisis, tipodoc, Nrodoc, codtiporoe, empresa, null);
        }
        
        /// <remarks/>
        public void SendOrdenAsync(string sede, string CodigoAtencion, string nombre, string apellidospaterno, string apellidomaterno, string fechanacimiento, string sexo, System.Data.DataTable DtAnalisis, string tipodoc, string Nrodoc, string codtiporoe, string empresa, object userState) {
            if ((this.SendOrdenOperationCompleted == null)) {
                this.SendOrdenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrdenOperationCompleted);
            }
            this.InvokeAsync("SendOrden", new object[] {
                        sede,
                        CodigoAtencion,
                        nombre,
                        apellidospaterno,
                        apellidomaterno,
                        fechanacimiento,
                        sexo,
                        DtAnalisis,
                        tipodoc,
                        Nrodoc,
                        codtiporoe,
                        empresa}, this.SendOrdenOperationCompleted, userState);
        }
        
        private void OnSendOrdenOperationCompleted(object arg) {
            if ((this.SendOrdenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrdenCompleted(this, new SendOrdenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrdenAnular", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOrdenAnular(string CodOrden) {
            object[] results = this.Invoke("SendOrdenAnular", new object[] {
                        CodOrden});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrdenAnularAsync(string CodOrden) {
            this.SendOrdenAnularAsync(CodOrden, null);
        }
        
        /// <remarks/>
        public void SendOrdenAnularAsync(string CodOrden, object userState) {
            if ((this.SendOrdenAnularOperationCompleted == null)) {
                this.SendOrdenAnularOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrdenAnularOperationCompleted);
            }
            this.InvokeAsync("SendOrdenAnular", new object[] {
                        CodOrden}, this.SendOrdenAnularOperationCompleted, userState);
        }
        
        private void OnSendOrdenAnularOperationCompleted(object arg) {
            if ((this.SendOrdenAnularCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrdenAnularCompleted(this, new SendOrdenAnularCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrdenAnalisisAnular", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendOrdenAnalisisAnular(string idadmision, string nropeticion, string codigocomponente) {
            object[] results = this.Invoke("SendOrdenAnalisisAnular", new object[] {
                        idadmision,
                        nropeticion,
                        codigocomponente});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrdenAnalisisAnularAsync(string idadmision, string nropeticion, string codigocomponente) {
            this.SendOrdenAnalisisAnularAsync(idadmision, nropeticion, codigocomponente, null);
        }
        
        /// <remarks/>
        public void SendOrdenAnalisisAnularAsync(string idadmision, string nropeticion, string codigocomponente, object userState) {
            if ((this.SendOrdenAnalisisAnularOperationCompleted == null)) {
                this.SendOrdenAnalisisAnularOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrdenAnalisisAnularOperationCompleted);
            }
            this.InvokeAsync("SendOrdenAnalisisAnular", new object[] {
                        idadmision,
                        nropeticion,
                        codigocomponente}, this.SendOrdenAnalisisAnularOperationCompleted, userState);
        }
        
        private void OnSendOrdenAnalisisAnularOperationCompleted(object arg) {
            if ((this.SendOrdenAnalisisAnularCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrdenAnalisisAnularCompleted(this, new SendOrdenAnalisisAnularCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendOrdenCompletedEventHandler(object sender, SendOrdenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrdenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrdenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendOrdenAnularCompletedEventHandler(object sender, SendOrdenAnularCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrdenAnularCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrdenAnularCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SendOrdenAnalisisAnularCompletedEventHandler(object sender, SendOrdenAnalisisAnularCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrdenAnalisisAnularCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrdenAnalisisAnularCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591